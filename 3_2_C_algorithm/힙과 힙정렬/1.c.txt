#include <stdio.h>

int h[100];
int n=0;

void upHeap(int k){
	int temp;
	if(k==1) return;
	else{
		if(h[k/2] < h[k]){
			temp = h[k/2];
			h[k/2] = h[k];
			h[k] = temp;
			upHeap(k/2);
		}
	}
}

void downHeap(int k){
	int temp;
	if(k*2 > n){
		return;
	}
	else{
		if(h[k] >= h[k*2] && h[k] >= h[k*2+1]){
			return;
		}
		else{
			if(h[k*2] < h[k] && h[k*2+1] < h[k]){
				return;
			}else{
				if(h[k*2+1] < h[k*2]){
					temp = h[k];
					h[k] = h[k*2];
					h[k*2] = temp;
					downHeap(k*2);
				}
				else{
					temp = h[k];
					h[k] = h[k*2+1];
					h[k*2+1] = temp;
					downHeap(k*2+1);
				}
			}
		}
	}
}

void insertltem(int k){
	n = n+1;
	h[n] = k;
	upHeap(n);
}

int removeMax(){
	int key;
	key = h[1];
	h[1] = h[n];
	n = n-1;
	downHeap(1);
	return key;
}

void printHeap(){
	int i;
	for(i=1;i<=n;i++){
		printf(" %d",h[i]);
	}
	printf("\n");
}

int main(){
	char input;
	int k,re;
	while(1){
		scanf("%c",&input);
		getchar();

		if(input == 'q') break;

		else if(input == 'i'){
			scanf("%d",&k);
			getchar();
			insertltem(k);
			printf("0\n");
		}
		
		else if(input == 'd'){
			re = removeMax();
			printf("%d\n",re);
		}
		
		else if(input == 'p'){
			printHeap();
		}
	}



}